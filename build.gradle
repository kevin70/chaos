plugins {
  id "java"
  id "java-library"
  id "idea"
  id "maven-publish"
  id "signing"
  id "io.spring.dependency-management" version "1.0.10.RELEASE"
}

allprojects {

  group "top.yein.chaos"
  version "1.0-SNAPSHOT"

  apply plugin: "java"
  apply plugin: "java-library"
  apply plugin: "maven-publish"
  apply plugin: "signing"
  apply plugin: "io.spring.dependency-management"

  ext {
    isReleasedVersion = !project.version.endsWith("-SNAPSHOT")
  }

  repositories {
    mavenLocal()
    def aliyunEnabled = System.getenv("GITHUB_ACTIONS") == null
    if (aliyunEnabled) {
      maven { url = "https://maven.aliyun.com/nexus/content/groups/public/" }
    }
    mavenCentral()
  }

  sourceCompatibility = "11"
  targetCompatibility = "11"

  [compileJava, compileTestJava, javadoc]*.options*.encoding = "UTF-8"

  javadoc {
    options.tags = ["date"]
    if (JavaVersion.current().isJava9Compatible()) {
      options.addBooleanOption("html5", true)
    }
  }

}

subprojects {

  publishing {
    publications {
      mavenJava(MavenPublication) {}
    }

    repositories {
      maven {
        credentials {
          username findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
          password findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
        }

        if (!isReleasedVersion) {
          url "https://oss.sonatype.org/content/repositories/snapshots"
        } else {
          url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
        }
      }
    }
  }

  signing {
    sign publishing.publications.mavenJava
  }
}

configure(subprojects) { project ->
  if (project.name == "chaos-bom") {
    return
  }

  task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = "sources"
    from sourceSets.main.allSource
  }

  task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = "javadoc"
    from javadoc.destinationDir
  }

  artifacts {
    archives sourcesJar
    archives javadocJar
  }

  publishing {
    publications {
      mavenJava(MavenPublication) {
        from components.java
        artifact sourcesJar
        artifact javadocJar

        pom {
          scm {
            connection = "scm:git:git@github.com:kevin70/chaos.git"
            developerConnection = "scm:git:ssh://github.com/kevin70/chaos.git"
            url = "https://github.com/kevin70/chaos"
          }
          developers {
            developer {
              id = "kk70"
              name = "Kevin Zou"
              email = "kevinz@weghst.com"
              url = "https://kk70.top"
            }
          }
        }
      }
    }
  }

  dependencyManagement {
    imports {
      mavenBom("org.junit:junit-bom:${junitVersion}")
    }
  }

  dependencies {
    testImplementation("org.junit.platform:junit-platform-launcher")
    testImplementation("org.junit.jupiter:junit-jupiter-engine")
    testImplementation("org.assertj:assertj-core:${assertjVersion}")
  }
}
